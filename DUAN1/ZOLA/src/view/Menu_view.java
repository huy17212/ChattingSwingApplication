
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.sql.*;
import controller.Chat_controller;
import controller.Friend_accept_controller;
import controller.Friend_send_controller;
import controller.Group_chat_controller;
import controller.Group_list_controller;
import controller.List_friend_controller;
import controller.User_controller;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.List;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.Border;
import jdbc.Data_User;
import jdbc.InsertMSSQL;
import model.Chat_model;
import model.Friend_accept_model;
import model.Friend_send_model;
import model.Group_chat_model;
import model.Group_list_model;
import model.Group_model;
import model.List_friend_model;
import model.Other_user_model;

/**
 *
 * @author Huy1721
 */
public class Menu_view extends javax.swing.JFrame {

    /**
     * Creates new form Menu_view
     */
    // tạo các biến đối tượng để lát gọi các hàm chạy tác vụ thêm xóa sửa file text, DB,...
    Messenger_view messenger_view;
    ListFriend_view listFriend_view;
    ToDoList_view toDoList_view;
    Data_User data_user;
    InsertMSSQL insertmssql;

    // tạo biến DAO để thực hiện Create_Delete_Update
    List_friend_controller list_friend_controller;
    Chat_controller chat_controller;
    User_controller user_controller;
    Friend_send_controller friend_send_controller;
    Friend_accept_controller friend_accept_controller;
    Group_list_controller group_list_controller;
    Group_chat_controller group_chat_controller;

    // tạo mảng để hứng biến mảng ArrayList
    ArrayList<ArrayList> dsObject; // mảng động 2 chiều chứa 5 nguồn 5 data, bao gồm G, GC, GL, LF, C;
    ArrayList<Group_model> ds_Group;
    ArrayList<Chat_model> ds_Chat;
    ArrayList<Group_list_model> ds_Group_list;
    ArrayList<List_friend_model> ds_List_friend;
    ArrayList<Group_chat_model> ds_Group_chat;
    ArrayList<Friend_accept_model> ds_Friend_accept;
    ArrayList<Friend_send_model> ds_Friend_send;

    String name;
    int signal;

    public Menu_view(String name_who_login, int signal_who_login) {
        initComponents();
        name = name_who_login;
        signal = signal_who_login;
        if (signal_who_login == 1) {

            // INSERT Dữ liệu từ ArrayList<Object> vào DB
            INSERTDB(name);
            // set up giao diện cho các button

            // thêm border cho application
        }
        setLocationRelativeTo(null);
        setup();
        getRootPane().setBorder(BorderFactory.createMatteBorder(4, 4, 4, 4, Color.GRAY));
        LoadProfile();
    }

    public Menu_view() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_menu_Avatar = new javax.swing.JLabel();
        btn_menu_mess = new javax.swing.JButton();
        btn_menu_listFriend = new javax.swing.JButton();
        btn_menu_todo = new javax.swing.JButton();
        btn_menu_setting = new javax.swing.JButton();
        Menu_Tab = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txt_menu_username = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_menu_Avatar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_menu_Avatar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        btn_menu_mess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/chat-box.png"))); // NOI18N
        btn_menu_mess.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_menu_mess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menu_messActionPerformed(evt);
            }
        });

        btn_menu_listFriend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/contact-list.png"))); // NOI18N
        btn_menu_listFriend.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_menu_listFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menu_listFriendActionPerformed(evt);
            }
        });

        btn_menu_todo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/to-do-list.png"))); // NOI18N
        btn_menu_todo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_menu_todo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menu_todoActionPerformed(evt);
            }
        });

        btn_menu_setting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/gear.png"))); // NOI18N
        btn_menu_setting.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_menu_setting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menu_settingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_menu_mess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_menu_listFriend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_menu_todo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_menu_setting, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btn_menu_mess, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_menu_listFriend, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_menu_todo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addComponent(btn_menu_setting)
                .addContainerGap())
        );

        Menu_Tab.setBackground(new java.awt.Color(255, 255, 255));
        Menu_Tab.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout Menu_TabLayout = new javax.swing.GroupLayout(Menu_Tab);
        Menu_Tab.setLayout(Menu_TabLayout);
        Menu_TabLayout.setHorizontalGroup(
            Menu_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Menu_TabLayout.setVerticalGroup(
            Menu_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txt_menu_username.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txt_menu_username.setForeground(new java.awt.Color(51, 51, 255));
        txt_menu_username.setText("jLabel1");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/button.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_menu_username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 551, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txt_menu_username))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Menu_Tab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Menu_Tab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

//        data_user.CLEAN(name);// Xóa file text cũ, để ghi lại dữ liệu mới đã thay đổi khi thoát ra.
//        WRITETEXTFILE(); // Lưu lại dữ liệu mới vào file text trước khi thoát ra.   
//        insertmssql.DELETE(); // Do vì đã lưu lại dữ liệu vào file text rồi, nên giờ chưa DB trống cho lần sau DN.
        String sql = "UPDATE Exit_or_not set signal = 0";
        jdbc.Helper_JDBC.update(sql, new ArrayList());
        System.exit(0);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void btn_menu_listFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menu_listFriendActionPerformed
        listFriend_view = new ListFriend_view(name);
        chargeForm(listFriend_view);
        this.btn_menu_mess.setBackground(Color.white);
        this.btn_menu_todo.setBackground(Color.white);
        this.btn_menu_listFriend.setBackground(Color.blue);
        this.btn_menu_setting.setBackground(Color.white);
    }//GEN-LAST:event_btn_menu_listFriendActionPerformed

    private void btn_menu_todoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menu_todoActionPerformed
        chargeForm(toDoList_view);
        this.btn_menu_mess.setBackground(Color.white);
        this.btn_menu_todo.setBackground(Color.blue);
        this.btn_menu_listFriend.setBackground(Color.white);
        this.btn_menu_setting.setBackground(Color.white);
    }//GEN-LAST:event_btn_menu_todoActionPerformed

    private void btn_menu_messActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menu_messActionPerformed
        messenger_view = new Messenger_view(name);
        chargeForm(messenger_view);
        this.btn_menu_mess.setBackground(Color.blue);
        this.btn_menu_todo.setBackground(Color.white);
        this.btn_menu_listFriend.setBackground(Color.white);
        this.btn_menu_setting.setBackground(Color.white);

    }//GEN-LAST:event_btn_menu_messActionPerformed

    private void btn_menu_settingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menu_settingActionPerformed
        this.btn_menu_mess.setBackground(Color.white);
        this.btn_menu_todo.setBackground(Color.white);
        this.btn_menu_listFriend.setBackground(Color.white);
        this.btn_menu_setting.setBackground(Color.blue);

        Setting_view dt = new Setting_view(this, true, name, this);

        dt.setLocationRelativeTo(null);
        dt.setResizable(false);
        dt.setTitle("Cài đặt");
        dt.setVisible(true);
    }//GEN-LAST:event_btn_menu_settingActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Menu_Tab;
    private javax.swing.JButton btn_menu_listFriend;
    private javax.swing.JButton btn_menu_mess;
    private javax.swing.JButton btn_menu_setting;
    private javax.swing.JButton btn_menu_todo;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel txt_menu_Avatar;
    private javax.swing.JLabel txt_menu_username;
    // End of variables declaration//GEN-END:variables

    // Set up thông tin chi tiết cho giao diện.
    private void setup() {

        this.btn_menu_mess.setBackground(Color.blue);
        this.btn_menu_todo.setBackground(Color.white);
        this.btn_menu_listFriend.setBackground(Color.white);
        user_controller = new User_controller();

        ResultSet rs = user_controller.SelectAll();
        this.setTitle("Zola");
        this.Menu_Tab.setLayout(new BorderLayout());
        messenger_view = new Messenger_view(name);
        listFriend_view = new ListFriend_view(name);
        toDoList_view = new ToDoList_view(name);
        this.Menu_Tab.add(messenger_view, BorderLayout.CENTER);
    }

    // Thay đổi giao diện khi click trên Menu.
    public void chargeForm(JPanel jpanel) {
        this.Menu_Tab.removeAll();
        this.Menu_Tab.repaint();
        this.Menu_Tab.revalidate();

        this.Menu_Tab.add(jpanel, BorderLayout.CENTER);

        this.Menu_Tab.repaint();
        this.Menu_Tab.revalidate();
    }

    private void INSERTDB(String username) {

        insertmssql = new InsertMSSQL();
        data_user = new Data_User();

        dsObject = data_user.READ(username); // load ArrayList<Arraylist> vào ds Object

        //ds_Group = (ArrayList<Group_model>) dsObject.get(1);
        ds_Chat = (ArrayList<Chat_model>) dsObject.get(3);
        ds_Group_list = (ArrayList<Group_list_model>) dsObject.get(2);
        ds_List_friend = (ArrayList<List_friend_model>) dsObject.get(0);
        ds_Group_chat = (ArrayList<Group_chat_model>) dsObject.get(1);

        list_friend_controller = new List_friend_controller();
        chat_controller = new Chat_controller();
        group_list_controller = new Group_list_controller();
        group_chat_controller = new Group_chat_controller();

        if (ds_List_friend.size() >= 1) {
            for (List_friend_model item : ds_List_friend) {
                String Username_user = item.getUsername_user().substring(item.getUsername_user().indexOf("=") + 1, item.getUsername_user().length());
                String Username_other_user = item.getUsername_other_user().substring(item.getUsername_other_user().indexOf("=") + 1, item.getUsername_other_user().length());
                List_friend_model dtMau = new List_friend_model(Username_user, Username_other_user);
                list_friend_controller.Insert(dtMau);
            }
        }

        if (ds_Chat.size() >= 1) {
            for (Chat_model item : ds_Chat) {
                String Username_user = item.getUsername_user().substring(item.getUsername_user().indexOf("=") + 1, item.getUsername_user().length());
                String Username_other_user = item.getUsername_other_user().substring(item.getUsername_other_user().indexOf("=") + 1, item.getUsername_other_user().length());
                int ID_Type = item.getID_type();
                String Text = item.getText().substring(item.getText().indexOf("=") + 1, item.getText().length());
                String Who_send = item.getWho_send().substring(item.getWho_send().indexOf("=") + 1, item.getWho_send().length());

                Chat_model dtMau = new Chat_model(Username_user, Username_other_user, ID_Type, Text, Who_send);
                chat_controller.Insert(dtMau);
            }
        }

        friend_accept_controller = new Friend_accept_controller();
        friend_send_controller = new Friend_send_controller();

        ds_Friend_accept = dsObject.get(4);
        ds_Friend_send = dsObject.get(5);

        if (ds_Friend_accept.size() >= 1) {
            for (Friend_accept_model item : ds_Friend_accept) {
                String Username_other_user = item.getUsername_other_user().substring(item.getUsername_other_user().indexOf("=") + 1, item.getUsername_other_user().length());
                Friend_accept_model dtMau = new Friend_accept_model(Username_other_user);
                friend_accept_controller.Insert(dtMau);
            }
        }

        if (ds_Friend_send.size() >= 1) {
            for (Friend_send_model item : ds_Friend_send) {
                String Username_user = item.getUsername_other_user().substring(item.getUsername_other_user().indexOf("=") + 1, item.getUsername_other_user().length());
                Friend_send_model dtMau = new Friend_send_model(Username_user);
                friend_send_controller.Insert(dtMau);
            }
        }

        if (ds_Group_list.size() >= 1) {
            for (Group_list_model item : ds_Group_list) {
                int ID_group = item.getID_group();
                String Username_other_user = item.getUsername_other_user().substring(item.getUsername_other_user().indexOf("=") + 1, item.getUsername_other_user().length());
                Group_list_model dtMau = new Group_list_model(ID_group, Username_other_user);
                group_list_controller.Insert(dtMau);
            }
        }

        if (ds_Group_chat.size() >= 1) {
            for (Group_chat_model item : ds_Group_chat) {
                int ID_group_chat = item.getID_group_chat();
                int ID_group = item.getID_group();
                String Username_other_user = item.getUsername_other_user().substring(item.getUsername_other_user().indexOf("=") + 1, item.getUsername_other_user().length());
                int type = item.getID_type();
                String text = item.getText().substring(item.getText().indexOf("=") + 1, item.getText().length());
                Group_chat_model dtMau = new Group_chat_model(ID_group_chat, ID_group, Username_other_user, type, text);
                group_chat_controller.Insert(dtMau);
            }
        }

    }

    String sql;
    ArrayList dsProp;
    ResultSet rs;
    Other_user_model YOU;
    String name_who_login = "";

    private void LoadProfile() {
        try {
            String sql = "SELECT Ho_ten, Image_avatar FROM Other_user WHERE (Username_other_user = (SELECT Username_user FROM [User]))";
            ResultSet rs = jdbc.Helper_JDBC.queryNvarchar(sql, new ArrayList());
            if (rs.next()) {
                ImageIcon image = new ImageIcon(
                        getClass().getResource("/image_user_avatar/" + rs.getString("Image_avatar")));
                Image img = image.getImage();
                img = img.getScaledInstance(txt_menu_Avatar.getWidth(), txt_menu_Avatar.getHeight(), Image.SCALE_SMOOTH);

                image = new ImageIcon(img);
                txt_menu_Avatar.setIcon(image);
                name_who_login = rs.getString("Ho_ten");

                txt_menu_username.setText(rs.getString("Ho_ten"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}

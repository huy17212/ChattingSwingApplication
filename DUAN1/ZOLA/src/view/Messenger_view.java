/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.Chat_controller;
import controller.Group_chat_controller;
import controller.Group_controller;
import controller.List_friend_controller;
import controller.Other_user_controller;
import java.awt.Component;
import java.awt.Image;
import java.sql.*;
import java.util.ArrayList;
import java.util.Objects;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import jdbc.Data_User;
import jdbc.InsertMSSQL;
import model.Chat_model;
import model.Group_chat_model;
import model.Group_list_model;
import model.Group_model;
import model.List_friend_model;
import model.MessViewTemp;
import model.Other_user_model;
import model.User_model;

/**
 *
 * @author Huy1721
 */
public class Messenger_view extends javax.swing.JPanel {

    /**
     * Creates new form Messenger_View
     */
    ArrayList dsProp;
    ArrayList<Chat_model> ds_chat;
    ArrayList<Other_user_model> ds_other_user_models;
    ArrayList<Group_model> ds_group_models;
    ArrayList<Group_chat_model> ds_group_chat;

    Chat_controller chat_controller;
    Other_user_controller other_user_controller;
    Group_chat_controller group_chat_controller;
    Group_controller group_controller;

    String name_who_login;
    Data_User data_user;
    InsertMSSQL insertmssql;

    String sql = "";
    ResultSet rs;

    User_model user_model;

    DefaultTableModel dtm;
    DefaultListModel dlm;

    String blank;
    int luachon = 0;
    String Who_Send;

    public Messenger_view(String name_who_login) {

        initComponents();
        this.name_who_login = name_who_login;
        tab_mess_show.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list_mess_showText.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        FillToTable();
        ShowDown();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Action_Mess = new javax.swing.JPopupMenu();
        Delete_1side = new javax.swing.JMenuItem();
        Action_List_friend = new javax.swing.JPopupMenu();
        ShowInfo = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        input_mess_seach = new javax.swing.JTextField();
        btn_mess_adduser = new javax.swing.JButton();
        btn_mess_addgroup = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        tab_mess_showdown = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tab_mess_show = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tab_mess_group_show = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tab_all_show = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_mess_showText = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        txt_Name_who_mess_with = new javax.swing.JLabel();
        input_mess_will_send = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();

        Delete_1side.setText("jMenuItem1");
        Delete_1side.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_1sideActionPerformed(evt);
            }
        });
        Action_Mess.add(Delete_1side);

        ShowInfo.setText("jMenuItem1");
        Action_List_friend.add(ShowInfo);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        input_mess_seach.setToolTipText("Tìm kiếm");
        input_mess_seach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                input_mess_seachKeyTyped(evt);
            }
        });

        btn_mess_adduser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add-user.png"))); // NOI18N
        btn_mess_adduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mess_adduserActionPerformed(evt);
            }
        });

        btn_mess_addgroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add-group.png"))); // NOI18N
        btn_mess_addgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mess_addgroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input_mess_seach, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_mess_adduser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_mess_addgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_mess_addgroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_mess_adduser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(input_mess_seach))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));

        tab_mess_showdown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_mess_showdownMouseClicked(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        tab_mess_show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_mess_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_mess_showMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tab_mess_show);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );

        tab_mess_showdown.addTab("Tin nhắn", jPanel7);

        tab_mess_group_show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_mess_group_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_mess_group_showMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tab_mess_group_show);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );

        tab_mess_showdown.addTab("Nhắn nhóm", jPanel4);

        tab_all_show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_all_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_all_showMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tab_all_show);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );

        tab_mess_showdown.addTab("Người lạ", jPanel6);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab_mess_showdown)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab_mess_showdown)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(415, 186));

        list_mess_showText.setBorder(null);
        list_mess_showText.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        list_mess_showText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                list_mess_showTextMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(list_mess_showText);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        txt_Name_who_mess_with.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        txt_Name_who_mess_with.setForeground(new java.awt.Color(153, 153, 153));
        txt_Name_who_mess_with.setText("Thông tin người dùng");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_Name_who_mess_with, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_Name_who_mess_with, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnSend.setText("Gửi");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(input_mess_will_send)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(input_mess_will_send)
                    .addComponent(btnSend))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tab_mess_showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_mess_showMouseClicked
        signal = "chat";
        luachon = tab_mess_show.getSelectedRow();
        ShowDown();
    }//GEN-LAST:event_tab_mess_showMouseClicked

    public void get_evt_tab_mess_group_showMouseClicked() {
        tab_mess_group_showMouseClicked(null);
    }

    String signal = "chat";
    private void tab_mess_group_showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_mess_group_showMouseClicked
        try {
            signal = "group";
            dlm.removeAllElements();
            try {
                luachon2 = tab_mess_group_show.getSelectedRow();
                Who_Send = (String) tab_mess_group_show.getValueAt(luachon2, 1);
            } catch (Exception e) {
                luachon2 = 0;
            }

            Who_Send = (String) tab_mess_group_show.getValueAt(luachon2, 1);

            DefaultTableModel dtm = (DefaultTableModel) tab_mess_group_show.getModel();
            dtm.setRowCount(0);
            ds_group_chat = new ArrayList<>();
            group_chat_controller = new Group_chat_controller();
            group_controller = new Group_controller();

            dtm_group = (DefaultTableModel) tab_mess_group_show.getModel();
            // chọn tất cả các tin nhắn cho vào ResultSet
            ResultSet rs = group_chat_controller.SelectAll();
            
            // cho vào ArrayList
            while (rs.next()) {
                Group_chat_model dtMau = new Group_chat_model(
                        rs.getInt(1),
                        rs.getInt(2),
                        rs.getString(3),
                        rs.getInt(4),
                        rs.getString(5)
                );
                ds_group_chat.add(dtMau);
            }
            
            
            
            for (Group_model item : ds_group_models) {

                String sql = "Select [Text] FROM [Group_chat] WHERE ID_Group_chat = ?";
                ArrayList dsPro = new ArrayList();
                dsPro.add(item.getID_group());
                ResultSet rsMess_viewTemo = jdbc.Helper_JDBC.query(sql, dsPro);
                if (rsMess_viewTemo.next()) {
                    dtm_group.addRow(new Object[]{item.getImage_group(), item.getName_group(), rsMess_viewTemo.getString(1)});
                }

            }

            blank = "&nbsp;";
            if (tab_mess_group_show.getRowCount() > 0) {
                // for để thêm khoảng trống cho text
                if (ds_group_models.size() > 0) {
                    for (int i = 0; i < 15; i++) {
                        blank = blank + "&nbsp;";
                    }
                }

                // for để load dữ liệu text lên List_Mess_view
                for (Group_chat_model item : ds_group_chat) {
                    Group_model dtMau = group_controller.Select(item.getID_group() + "");
                    if (dtMau.getName_group().equals(Who_Send)) {
                        String a = item.getText();
                        StringBuilder SB = new StringBuilder(a);

                        int len = SB.length();
                        int cut = 0;
                        String tempString = "";

                        int i = 0;
                        ArrayList<String> dsChat = new ArrayList<>();
                        while (len > 30) {
                            tempString = SB.substring(0, SB.indexOf(" ", 30));
                            SB = SB.delete(cut, SB.indexOf(" ", 30));
                            if (i == 0) {
                                dsChat.add(blank + "&nbsp;" + tempString);
                                i = 1;
                            } else {
                                dsChat.add(blank + tempString);
                            }
                            len = SB.length();

                        }
                        String variable = "";
                        int k = 0;
                        for (String item1 : dsChat) {
                            if (k == 0) {
                                variable = variable + item1;
                                k++;
                            } else {
                                variable = variable + "<br>" + item1;
                            }
                        }

                        variable = variable + "<br>" + item.getUsername_other_user() + ": " + SB.toString();
                        dlm.addElement("<html><p>" + variable + "</p></html>");
                    }
                }

                // đặt tên người nhắn
                txt_Name_who_mess_with.setText(" " + Who_Send);
                tab_mess_group_show.setRowSelectionInterval(luachon2, luachon2);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tab_mess_group_showMouseClicked

    ArrayList<Group_list_model> dsGroup_list_paticipant;

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        data_user = new Data_User();
        if (signal.equals("chat")) {
            // Insert Chat vao DB Chat
            String MessWillSend = input_mess_will_send.getText();
            Chat_model dtMau = new Chat_model(this.name_who_login, Who_Send, 1, MessWillSend, this.name_who_login);
            chat_controller.Insert(dtMau);

            // Insert Chat vao Other_chat
            // B1: Delete DB Other_chat
            insertmssql = new InsertMSSQL();
            insertmssql.DELETE_Other_chat();

            // B2: Ghi file text vao DB
            insertmssql.INSERT_OTHER_CHAT_TEXT_TO_DB(Who_Send);

            
            //
            String sql1 = "INSERT INTO OTHER_CHAT VALUES (?,?,?,?,?)";
            
            ArrayList dsProp = new ArrayList();
            dsProp.add(Who_Send);
            dsProp.add(this.name_who_login);
            dsProp.add(1);
            dsProp.add(MessWillSend);
            dsProp.add(this.name_who_login);

            jdbc.Helper_JDBC.updateNvarchar(sql1, dsProp);

            // B5: Ghi DB moi vao file text
            data_user.WRITE_TO_OTHER_CHAT(Who_Send);

            luachon = 0;
            FillToTable();
            ShowDown();
            tab_mess_show.setRowSelectionInterval(0, 0);
            input_mess_will_send.setText("");
        } else if (signal.equals("group")) {
            try {
                // step 1: lấy dữ liệu danh sách tất cả người giam gia
                ResultSet rs_All_Other_user = other_user_controller.SelectAll();
                dsGroup_list_paticipant = new ArrayList<>();

                while (rs_All_Other_user.next()) {
                    ArrayList<Group_list_model> dsTemp = data_user.READ_TO_GROUP_CHAT(rs_All_Other_user.getString(1), name_who_login);

                    for (Group_list_model item : dsTemp) {
                        dsGroup_list_paticipant.add(item);
                    }
                    
                    data_user.CLEAN_TO_GROUP_CHAT(rs_All_Other_user.getString(1), name_who_login);
                }

                // step 2: thêm dữ liệu vào bảng Group_chat_inv
                String tenNhom = txt_Name_who_mess_with.getText();
                
                StringBuilder stringBuilder = new StringBuilder(tenNhom);
                stringBuilder.deleteCharAt(0);

                String sql = "SELECT ID_group FROM [Group] WHERE Name_group = ?";
                ArrayList dsPropList = new ArrayList<>();
                dsPropList.add(stringBuilder.toString());
                ResultSet rs = jdbc.Helper_JDBC.query(sql, dsPropList);

                if (rs.next()) {
                    String sql1 = "INSERT INTO Group_chat_inventory VALUES (?,?,?,?)";
                    ArrayList dsProp = new ArrayList();
                    dsProp.add(rs.getInt(1));
                    dsProp.add(name_who_login);
                    dsProp.add(1);
                    dsProp.add(input_mess_will_send.getText());
                    jdbc.Helper_JDBC.update(sql1, dsProp);
                    // step 3: thêm tin nhắn nhóm vào Group_chat
                    Group_chat_model dtMau = new Group_chat_model(1, rs.getInt(1), name_who_login, 1, input_mess_will_send.getText());
                    group_chat_controller.Insert(dtMau);
                }
                
                // step 5: thêm dữ liệu vào từng file text Group_chat
                for (Group_list_model item : dsGroup_list_paticipant) {
                    data_user.WRITE_TO_GROUP_CHAT(item, name_who_login);
                }

                // step 6: fillToTable() and ShowDown() để load lại dữ liệu
                FillToTable();
                ShowDown();

                // step 7: gọi sự kiện get_evt_tab_mess_group_showMouseClicked
                
                get_evt_tab_mess_group_showMouseClicked();
                input_mess_will_send.setText("");
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSendActionPerformed

    ArrayList<List_friend_model> ds_list_friend;

    int luachon1;
    int luachon2;
    private void tab_all_showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_all_showMouseClicked
        try {
            luachon1 = tab_all_show.getSelectedRow();

            String name = (String) tab_all_show.getValueAt(luachon1, 1);

            ds_list_friend = new ArrayList<>();
            List_friend_controller list_friend_controller = new List_friend_controller();
            ResultSet rs = list_friend_controller.SelectAll();

            while (rs.next()) {
                List_friend_model dtMau = new List_friend_model(rs.getString(1), rs.getString(2));
                ds_list_friend.add(dtMau);
            }
            int v = 0;
            for (MessViewTemp item : ds_messViewTemps) {
                if (item.getUsername_other_user().equals(name)) {
                    btnSend.setEnabled(true);
                    input_mess_will_send.setEditable(true);
                    luachon = v;
                    ShowDown();
                    btnSend.setEnabled(true);
                    input_mess_will_send.setText("");
                    break;
                } else {
                    txt_Name_who_mess_with.setText(name + " (không thể nhắn tin!)");
                    dlm.removeAllElements();
                    btnSend.setEnabled(false);
                    input_mess_will_send.setEditable(false);

                }
                v++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_tab_all_showMouseClicked
    DefaultListModel dkv;
    private void input_mess_seachKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_input_mess_seachKeyTyped
        try {
            ds_messViewTemps.removeAll(ds_messViewTemps);
            String who_you_get_want = input_mess_seach.getText();

            dkv = new DefaultListModel<>();
            list_mess_showText.setModel(dkv);

            dkv.removeAllElements();

            sql = "select max(c.ID_chat), c.Username_other_user, o_u.Image_avatar FROM Chat c LEFT JOIN Other_user o_u on c.Username_other_user = o_u.Username_other_user WHERE c.Username_other_user like ? GROUP BY  c.Username_other_user, o_u.Image_avatar  ORDER BY MAX(ID_chat) desc";
            ArrayList dsProp = new ArrayList();
            dsProp.add(who_you_get_want + "%");
            rs = jdbc.Helper_JDBC.query(sql, dsProp);

            while (rs != null & rs.next()) {

                String sql = "Select [Text] FROM [Chat] WHERE ID_chat = ?";
                ArrayList dsPro = new ArrayList();
                dsPro.add(rs.getInt(1));
                ResultSet rsMess_viewTemo = jdbc.Helper_JDBC.query(sql, dsPro);
                if (rsMess_viewTemo.next()) {
                    MessViewTemp dtMau = new MessViewTemp(rs.getString("Image_avatar"), rs.getString("Username_other_user"), rsMess_viewTemo.getString("Text"));
                    ds_messViewTemps.add(dtMau);
                }
            }

            String sql = "SELECT * FROM [Other_user] WHERE Username_other_user like ?";
            ArrayList dsProp1 = new ArrayList<>();
            dsProp1.add(who_you_get_want + "%");
            ResultSet rs1 = jdbc.Helper_JDBC.queryNvarchar(sql, dsProp1);

            ds_other_user_models = new ArrayList<>();

            while (rs1 != null & rs1.next()) {
                Other_user_model dtMau = new Other_user_model(rs1.getString(1), rs1.getString(2), rs1.getString(3), rs1.getString(4), rs1.getString(5), rs1.getString(6), rs1.getNString(7));
                ds_other_user_models.add(dtMau);
            }

            if (rs != null) {
                luachon = 0;
                ShowDown();
                txt_Name_who_mess_with.setText("Thông tin người dùng");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_input_mess_seachKeyTyped

    private void btn_mess_adduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mess_adduserActionPerformed
        Seach_view dtMau = new Seach_view(null, true, name_who_login, this);
        dtMau.setLocationRelativeTo(null);
        dtMau.setResizable(false);
        dtMau.setVisible(true);

    }//GEN-LAST:event_btn_mess_adduserActionPerformed

    private void Delete_1sideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_1sideActionPerformed
        chat_controller = new Chat_controller();
        int text = list_mess_showText.getSelectedIndex();
        String who_send = (String) tab_mess_show.getValueAt(luachon, 1);

        String sql = "SELECT * FROM CHAT WHERE Username_other_user = ?";
        ArrayList dsprop = new ArrayList<>();
        dsprop.add(who_send);
        ResultSet rs = jdbc.Helper_JDBC.query(sql, dsprop);
        ArrayList<Chat_model> dsChat = new ArrayList<>();
        try {
            while (rs.next()) {
                dsChat.add(new Chat_model(rs.getString(2), rs.getString(3), rs.getInt(4), rs.getString(5), rs.getString(6)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        String thing = dsChat.get(text).getText();

        int va  = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn xóa rồi chứ?");
        if (va  == JOptionPane.YES_OPTION) {
            if (thing.equals("Chào mừng bạn đến với zola (Đây là tin nhắn tự sinh).") || thing.equals("Xin Chào Bạn Nha, Mình Vừa Kết Bạn.")) {
                JOptionPane.showMessageDialog(null, "Đây là tin nhắn khởi nguyên.");
            } else {
                chat_controller.Delete(thing);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Đã hủy bỏ.");
        }
        FillToTable();
        ShowDown();
    }//GEN-LAST:event_Delete_1sideActionPerformed

    private void list_mess_showTextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_mess_showTextMouseReleased
        if (evt.isPopupTrigger()) {
            Delete_1side.setText("Xóa tin nhắn này.");
            Action_Mess.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_list_mess_showTextMouseReleased

    private void btn_mess_addgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mess_addgroupActionPerformed
        Seach_group_view dtMau = new Seach_group_view(null, true, name_who_login, this);
        dtMau.setLocationRelativeTo(null);
        dtMau.setResizable(false);
        dtMau.setVisible(true);
    }//GEN-LAST:event_btn_mess_addgroupActionPerformed

    private void tab_mess_showdownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_mess_showdownMouseClicked

    }//GEN-LAST:event_tab_mess_showdownMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu Action_List_friend;
    private javax.swing.JPopupMenu Action_Mess;
    private javax.swing.JMenuItem Delete_1side;
    private javax.swing.JMenuItem ShowInfo;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btn_mess_addgroup;
    private javax.swing.JButton btn_mess_adduser;
    private javax.swing.JTextField input_mess_seach;
    private javax.swing.JTextField input_mess_will_send;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JList<String> list_mess_showText;
    private javax.swing.JTable tab_all_show;
    private javax.swing.JTable tab_mess_group_show;
    private javax.swing.JTable tab_mess_show;
    private javax.swing.JTabbedPane tab_mess_showdown;
    private javax.swing.JLabel txt_Name_who_mess_with;
    // End of variables declaration//GEN-END:variables

    ArrayList<MessViewTemp> ds_messViewTemps;

    public void FillToTable() {
        try {
            ds_group_models = new ArrayList<>();

            tab_mess_show.getColumnModel().getColumn(0).setPreferredWidth(35);
            tab_mess_show.getColumnModel().getColumn(1).setPreferredWidth(55);
            tab_mess_show.getColumnModel().getColumn(2).setPreferredWidth(85);

            tab_all_show.getColumnModel().getColumn(0).setPreferredWidth(35);
            tab_all_show.getColumnModel().getColumn(1).setPreferredWidth(140);

            tab_mess_group_show.getColumnModel().getColumn(0).setPreferredWidth(35);
            tab_mess_group_show.getColumnModel().getColumn(1).setPreferredWidth(55);
            tab_mess_group_show.getColumnModel().getColumn(2).setPreferredWidth(85);

            chat_controller = new Chat_controller();
            other_user_controller = new Other_user_controller();
            // START FILL LIST CHAT.
            DefaultTableModel dtm = (DefaultTableModel) tab_mess_show.getModel();
            dtm.setRowCount(0);

            ds_messViewTemps = new ArrayList();
            sql = "select max(c.ID_chat), c.Username_other_user, o_u.Image_avatar FROM Chat c LEFT JOIN Other_user o_u on c.Username_other_user = o_u.Username_other_user GROUP BY  c.Username_other_user, o_u.Image_avatar ORDER BY MAX(ID_chat) desc";
            rs = jdbc.Helper_JDBC.query(sql, new ArrayList());

            while (rs.next()) {
                String sql = "Select [Text] FROM [Chat] WHERE ID_chat = ?";
                ArrayList dsPro = new ArrayList();
                dsPro.add(rs.getInt(1));
                ResultSet rsMess_viewTemo = jdbc.Helper_JDBC.query(sql, dsPro);
                if (rsMess_viewTemo.next()) {
                    MessViewTemp dtMau = new MessViewTemp(rs.getString("Image_avatar"), rs.getString("Username_other_user"), rsMess_viewTemo.getString("Text"));
                    ds_messViewTemps.add(dtMau);
                }
            }

            sql = "select  MAX(G_c.ID_group_chat) as 'ID' , G.name_group, G.Image_group FROM Group_chat G_c LEFT JOIN Group_list G_l ON G_l.ID_group = G_c.ID_group LEFT JOIN [Group] G ON G.ID_group = G_c.ID_group WHERE G.ID_group = G_c.ID_group and G_c.ID_group in (SELECT ID_group FROM Group_chat) GROUP BY G.name_group, G.Image_group ORDER BY  MAX(G_c.ID_group_chat) desc";
            rs = jdbc.Helper_JDBC.query(sql, new ArrayList<>());

            while (rs.next()) {
                Group_model dtMau = new Group_model(rs.getInt(1), rs.getString(2), rs.getString(3));
                ds_group_models.add(dtMau);

            }

            // START FILL CHAT DETAIL.
            ds_chat = new ArrayList<>();
            rs = chat_controller.SelectAll();
            ds_other_user_models = new ArrayList<>();

            ResultSet rsv = other_user_controller.SelectAll();

            sql = "";

            while (rsv.next()) {
                if (!rsv.getString(1).equals("system")) {
                    Other_user_model dtMau = new Other_user_model(rsv.getString(1), rsv.getString(2), rsv.getString(3), rsv.getString(4), rsv.getString(5), rsv.getString(6), rsv.getString(7));
                    ds_other_user_models.add(dtMau);
                }
            }

            while (rs.next()) {
                Chat_model dtMau = new Chat_model(rs.getString("Username_user"),
                        rs.getString("Username_other_user"),
                        rs.getInt("ID_type"), rs.getString("Text"),
                        rs.getString("Who_send"));
                ds_chat.add(dtMau);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    DefaultTableModel dtm_show_guest;
    DefaultTableModel dtm_group;

    public void ShowDown() {
        try {
            dlm = new DefaultListModel<>();
            list_mess_showText.setModel(dlm);
            dtm = (DefaultTableModel) tab_mess_show.getModel();
            dtm_show_guest = (DefaultTableModel) tab_all_show.getModel();
            dtm_group = (DefaultTableModel) tab_mess_group_show.getModel();

            dtm.setRowCount(0);
            dtm_show_guest.setRowCount(0);
            dtm_group.setRowCount(0);

            // for để thêm tab_all_show_guest
//        if (tab_all_show.getRowCount() > 0) {
            for (Other_user_model item : ds_other_user_models) {
                dtm_show_guest.addRow(new Object[]{item.getImage_avatar(), item.getUsername_other_user()});
            }
            //      }

            for (Group_model item : ds_group_models) {

                String sql = "Select [Text] FROM [Group_chat] WHERE ID_Group_chat = ?";
                ArrayList dsPro = new ArrayList();
                dsPro.add(item.getID_group());
                ResultSet rsMess_viewTemo = jdbc.Helper_JDBC.query(sql, dsPro);
                if (rsMess_viewTemo.next()) {
                    dtm_group.addRow(new Object[]{item.getImage_group(), item.getName_group(), rsMess_viewTemo.getString(1)});
                }

            }

            // for để thêm Mess_view_temp vào table bên góc trái
            for (MessViewTemp item : ds_messViewTemps) {
                dtm.addRow(new Object[]{item.getImage_avatar(), item.getUsername_other_user(), item.getText()});
            }
            blank = "&nbsp;";
            if (tab_mess_show.getRowCount() > 0) {
                Who_Send = (String) tab_mess_show.getValueAt(luachon, 1);

                if (ds_messViewTemps.size() > 0) {

                    for (int i = 0; i < Who_Send.length() + 6; i++) {
                        blank = blank + "&nbsp;";
                    }
                }
                // for để thêm khoảng trống cho text

                // for để load dữ liệu text lên List_Mess_view
                for (Chat_model item : ds_chat) {
                    if (item.getUsername_other_user().equals(Who_Send)) {
                        String a = item.getText();
                        StringBuilder SB = new StringBuilder(a);

                        int len = SB.length();
                        int cut = 0;
                        String tempString = "";

                        int i = 0;
                        ArrayList<String> dsChat = new ArrayList<>();
                        while (len > 30) {
                            tempString = SB.substring(0, SB.indexOf(" ", 30));
                            SB = SB.delete(cut, SB.indexOf(" ", 30));
                            if (i == 0) {
                                dsChat.add(blank + "&nbsp;" + tempString);
                                i = 1;
                            } else {
                                dsChat.add(blank + tempString);
                            }
                            len = SB.length();

                        }
                        String variable = "";
                        int k = 0;
                        for (String item1 : dsChat) {
                            if (k == 0) {
                                variable = variable + item1;
                                k++;
                            } else {
                                variable = variable + "<br>" + item1;
                            }
                        }

                        variable = variable + "<br>" + item.getWho_send() + ": " + SB.toString();
                        dlm.addElement("<html><p>" + variable + "</p></html>");
                    }
                }

                // đặt tên người nhắn
                other_user_controller = new Other_user_controller();
                Other_user_model dtMau = other_user_controller.Select(Who_Send);
                txt_Name_who_mess_with.setText(" " + Who_Send + "  (" + dtMau.getHo_ten() + ")");

                // cấu hình lại ảnh trong mess_temp_view
                tab_all_show.getColumnModel().getColumn(0).setCellRenderer(new ImageRender());
                tab_mess_show.getColumnModel().getColumn(0).setCellRenderer(new ImageRender());
                tab_mess_group_show.getColumnModel().getColumn(0).setCellRenderer(new ImageRender());
                tab_all_show.setRowHeight(50);
                tab_mess_show.setRowHeight(50);
                tab_mess_group_show.setRowHeight(50);
                tab_mess_show.setRowSelectionInterval(luachon, luachon);
            }

        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    private class ImageRender extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            String Photoname = "/image_user_avatar/" + value.toString();
            Icon imageIcon = new ImageIcon(new ImageIcon(Objects.requireNonNull(this.getClass().getResource(Photoname))).getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH));
            return new JLabel(imageIcon);
        }
    }

}
